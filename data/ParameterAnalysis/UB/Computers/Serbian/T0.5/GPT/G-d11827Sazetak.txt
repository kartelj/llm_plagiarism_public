'U ovom istraživanju smo započeli sa hipotezom da se resursi višejezgarnih (CMP) procesora, uz dodatnu hardversku i/ili softversku podršku za spekulativno izvršavanje niti (TLS), mogu koristiti za izvršavanje dominantnih sekvencijalnih aplikacija. Međutim, neka postojeća rešenja CMP procesora sa TLS podrškom zahtevaju upotrebu značajnih dodatnih hardverskih i softverskih resursa za obavljanje specifičnih operacija tokom spekulativnog izvršavanja sekvencijalnih aplikacija. Zato je u ovom radu napravljena temeljna i vrlo detaljna komparativna analiza postojećih CMP sistema sa TLS podrškom, posebno se fokusirajući na elemente hardverske i softverske podrške za spekulaciju na registarskom i memorijskom nivou. Sa aspekta podrške za registarsku komunikaciju, postojeći sistemi su klasifikovani na osnovu načina organizacije skupa registara i načina povezivanja, a zatim su detaljno analizirani registarski komunikacioni mehanizmi, tehnike oporavka nakon pogrešne spekulacije, performanse i skalabilnost. Klasifikacija sistema sa aspekta spekulativne memorijske komunikacije je urađena prema organizaciji memorijske hijerarhije, a zatim je razmotrena složenost hardverske i softverske podrške za spekulaciju. Uočeni su neki potencijalni uzroci za degradaciju performansi kao što su neujednačen saobraćaj pri završetku niti i neprilagođen algoritam zamene u keš memoriji. Na osnovu sprovedene analize postojećih spekulativnih CMP sistema, sa ciljem ostvarivanja što boljeg odnosa cene/performanse i otklanjanja uočenih neefikasnosti, u ovoj disertaciji je definisan predlog rešenja CMP procesora sa jednostavnijom TLS podrškom, u kojem se komunikacija između spekulativnih niti obavlja i na registarskom i na memorijskom nivou. Predloženi CMP sistem za spekulativno izvršavanje niti pripada grupi CMP sistema sa osnovnom generičkom arhitekturom nadograđenom podrškom i za registarsku i za memorijsku komunikaciju. On se sastoji od četiri procesorska jezgra sa privatnim L1 keš memorijama za podatke i instrukcije povezanim zajedničkom magistralom sa zajedničkom L2 keš memorijom. Spekulativna komunikacija na registarskom i memorijskom nivou se obavlja preko posebnih zajedničkih magistrala na principima „snoopy“ protokola, dok se spekulativna paralelizacija sprovodi na nivou petlji tako da spekulativne niti odgovaraju pojedinim iteracijama petlje. Identifikacija niti u predloženom sistemu se vrši uz pomoć binarnog anotatora, posebne softverske komponente koja radi nad sekvencijalnim izvršnim kodom tako da se nije potrebno ponovno prevođenje izvornog koda. Pored toga, binarni anotator za potrebe protokola koji kontroliše registarsku komunikaciju vrši klasifikaciju instrukcija upisa u registre čije se vrednosti tokom spekulativnog izvršavanja mogu menjati u petlji. Spekulativno proizvedene memorijske vrednosti se čuvaju u privatnoj L1 keš memoriji, dok zajednička L2 keš memorija čuva sekvencijalno stanje aplikacije. Memorijske vrednosti mogu biti prenesene u L2 keš memoriju nakon što nit postane nespekulativna. Spekulativna nit može da čita nespekulativne podatke od nespekulativne niti ili od prethodnih ili narednih spekulativnih niti. Pored toga, u predloženom rešenju je implementirana podrška za dinamičko prepoznavanje narušavanja zavisnosti po podacima i oporavak nakon pogrešne spekulacije. Za registarsku komunikaciju su predložena dva protokola: osnovna varijanta - SIC protokol i proširena varijanta – ESIC protokol koji je za razliku od SIC-a zasnovan na spekulativnom prosleđivanju potencijalno sigurnih vrednosti registara. Kvalitativno poređenje protokola SIC i ESIC je ukazalo na postojanje potencijalnog dobitka na performansama u ESIC u odnosu na SIC. Ovaj dobitak je posledica smanjenog blokiranja niti potrošača i direktno zavisi od verovatnoće da se prosleđena, potencijalno sigurna vrednost registra ispostavi kao konačna. U suprotnom, pogrešna spekulacija izaziva poništavanje niti što može imati negativan efekat na performanse. Zbog toga se koristi informacija iz profajlera o verovatnoći uspešne spekulacije kako bi poništavanje niti bilo što ređe. U protokolima SIC i ESIC se koristi mehanizam distribuiranog odlučivanja za efikasnije pronalaženje najbliže prethodne niti. Osim toga, broj invalidacionih promašaja za konstantne registre u protokolima SIC i ESIC je smanjen korišćenjem „read-snarfing“ tehnike. Pored toga, protokoli SIC i ESIC pokazuju skalabilnost sa aspekta kompleksnosti zato što veličina lokalnog kataloga i hardverska podrška ostaju skoro konstantni sa povećanjem broja procesorskih jezgara. Predložene su i tri varijante memorijskog protokola koje integrišu održavanje koherencije keš memorija i podršku za spekulaciju. Prva varijanta, protokol SISC-WI, zasnovan je na strategiji poništavanja i koristi 13 stanja za praćenje statusa podatka. On omogućava samo komunikaciju među nitima koju je pokrenuo potrošač. Da bi se smanjio broj invalidacionih promašaja razrađena je i druga verzija protokola sa implementacijom „read-snarfing“ tehnike, SISC-WI-RS, koja vrši istovremenu validaciju poništenih kopija. Treća varijanta, SISC-WU protokol, zasnovan je na strategiji ažuriranja i koristi 9 stanja za praćenje statusa podatka. On omogućava komunikaciju među nitima i od strane potrošača i od strane proizvođača. Pored toga, svakoj reči u L1 keš memoriji je dodat jedan bit koji označava zastarelost reči. U svim varijantama memorijskih protokola je predložen i mehanizam distribuirane arbitracije na magistrali za izbor odgovarajućeg dostavljača podataka na zahtev neke niti. Takođe, sve tri varijante memorijskih protokola koriste prilagođeni algoritam zamene koji prilikom izbora reči za zamenu uzima u obzir njeno stanje kao primarni kriterijum, umesto uobičajenog kriterijuma istorije pristupa korišćenog kod svih drugih sistema. Spekulativnoj niti je dozvoljeno da iz L1 keš memorije izbaci modifikovanu potvrđenu reč koja je jedina kopija prilikom operacije spekulativnog čitanja odnosno pisanja za datu reč. Pored toga, sve reči koje nisu bile spekulativno pročitane ili izmenjene mogu se smatrati kandidatima za zamenu, čime se izbegava zaustavljanje spekulativnog izvršavanja. Za potrebe implementacione i evaluacione analize predloženog sistema, razvijeno je novo simulaciono okruženje koje je zasnovano na modularnom simulatoru UNISIM koji podržava simulaciju na nivou ciklusa. Kao najkompleksniji deo ukupne podrške za TLS u predloženom CMP procesoru, za implementaciju je odabran protokol SISC-WI. U tom cilju je izvršena modifikacija potrebnih modula (modul keš memorije, modul keš kontrolera i modul sistemske magistrale) u biblioteci komponenti simulatora UNISIM kako bi se zadovoljili zahtevi SISC-WI protokola. Osim toga, u simulatoru UNISIM je implementiran modul za MIPS spekulativnu višejezgarnu arhitekturu pri čemu su dodata tri nova modula: raspoređivač spekulativnih niti na procesorska jezgra, modul koji detektuje narušavanje zavisnosti po podacima i vrši poništavanje niti i modul koji bira dobavljača za traženi podatak između više niti. Modul za detekciju i razrešavanje pogrešne spekulacije uspešno rešava probleme koji su vezani za poništavanje niti, a za koje u dostupnoj literaturi nisu nađena rešenja. Razvijen je i kros-kompajler zasnovan na radnom okviru crosstool-NG. Na kraju, implementacija protokola SISC-WI u realizovanom simulacionom okruženju je pokazala ispravnost koncepta.'