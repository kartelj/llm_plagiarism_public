'Ova studija ima za cilj da poveže polje razvoja informacionih sistema sa sferom operacionih istraživanja kroz upotrebu različitih tehnika softvera i optimizacije u okviru jednog od modernih pristupa u razvoju aplikacija – servisno-orijentisani pristup. Ovaj pristup pripada novijoj generaciji metoda za razvoj distribuiranih aplikacija i automatizaciju poslovanja u preduzećima, čime se unapređuju efikasnost, agilnost i produktivnost preduzeća, što ga čini sve popularnijim. Cilj je omogućiti fleksibilno programsko povezivanje softverskih komponenti, odnosno servisa, koji su razvijeni nezavisno (a mogu biti realizovani na različitim platformama i u različitim programskim jezicima). Smernice servisno-orijentisane paradigme vode ka razvoju servisa čija funkcionalnost nije zavisna od bilo kog posebnog poslovnog procesa i koji se mogu koristiti na različite načine u različitim aplikacijama. Web servisi su fizički nezavisne softverske komponente, dostupne na internetu, koje pružaju određenu funkcionalnost. Zbog svoje osnove na široko prihvaćenim standardima, web servisi su danas dominantan oblik servisno-orijentisanih softverskih rešenja. Uprkos tome što su web servisi nezavisno razvijeni i objavljeni na internetu, svakim danom postaje dostupan veći broj servisa koji pružaju iste funkcionalnosti zbog čega je izbor najboljeg postao aktuelna tema. Tada nefunkcionalne karakteristike servisa (Quality of Service – QoS) postaju sve važnije. Selekcija se najčešće izvršava na osnovu više nefunkcionalnih karakteristika koje su veoma različite po svojoj prirodi. Sa druge strane, kada pojedinačni servis ne može obezbediti zahtevanu funkcionalnost, ali se ona može ostvariti izvršavanjem različitih servisa, izbor postaje još složeniji. Kompozicija servisa podrazumeva agregaciju servisa koji su sastavljeni na takav način da automatizuju određeni zadatak ili poslovni proces. Kroz ovakav pristup razvoju aplikacija, postojeći servisi se mogu koristiti za ispunjenje novih poslovnih zahteva i automatizaciju novih poslovnih procesa uz manju potrošnju vremena i resursa. Izbor odgovarajućeg web servisa za kompoziciju podrazumeva izbor konkretnih servisa, za svaku definisanu komponentu kompozicije, tako da rezultujuća kompozicija ne samo da zadovolji postavljene funkcionalne zahteve, već je i optimalna u pogledu relevantnih QoS zahteva. Za određivanje QoS za kompoziciju potrebno je agregirati QoS vrednosti pojedinačnih servisa u kompoziciji, pri čemu način agregacije zavisi od prirode QoS atributa ali i od strukture kompozicije. Uz to, često postoje i neka ograničenja u pogledu minimalnih QoS karakteristika koje kompozicija treba da ispunjava. Napravljena je kritička analiza relevantnih postojećih pristupa modeliranju problema i ukazano na nedostatke mnogih pristupa koji anticipiraju pojednostavljenja problema u smislu omogućavanja razmatranja samo kvantitativnih QoS atributa, zahtevaju linearnost funkcija za agregaciju QoS vrednosti prilikom određivanja QoS vrednosti celokupne kompozicije, zahtevaju dodeljivanje proizvoljnih težina i normalizaciju vrednosti. Sa ciljem poboljšanja ovih nedostataka, predložena su dva nova pristupa za modeliranje problema koji ne zahtevaju dodeljivanje proizvoljnih težina niti normalizaciju vrednosti nefunkcionalnih karakteristika. U isto vreme, cilj je bio omogućiti adekvatnije izražavanje korisničkih zahteva u pogledu kompromisa koje su voljni da naprave, a koji se često mogu izraziti samo uz pomoć složenih verbalnih izjava. Prvi predlog je upotreba konzistentne fazi logike koja omogućava izražavanje složenih korisničkih zahteva kao logičkih zahteva definisanih u Buleovom okviru. Štaviše, upotreba logičke agregacije vodi ka novoj obeležju komponenti razlikujući se od težinske sume. Konzistentna fazi logika je odabrana uzimajući u obzir da primena konvencionalne fazi logike ne omogućava uzimanje u obzir negacije koja u klasičnoj fazi logici narušava princip kontradikcije i isključenja trećeg mišljenja. Drugi pristup, koji do sad nije bio predložen za modeliranje problema, namenjen je slučajevima kada ne postoje logički zahtevi vezani za kriterijume ali su kriterijumi heterogeni i izraženi kroz više različitih jedinica mere. U tom slučaju se predlaže da se problem modeluje kao diskretan problem višekriterijumskog razlomljenog programiranja (eng. Multi-Objective Fractional Programming - MOFP). Relevantni kriterijumi bi se uparivali uzimajući u obzir njihovu prirodu (jedinicu mere i tip) te bi svi formirani količnici imali istu jedinicu mere i optimizovali bi se u istom smeru. Za selekciju pojedinačnih servisa predloženo je inovativno proširenje AHP (eng. Analytic Hierarchy Process) metode primenom konzistentne fazi logike kako bi se omogućila selekcija na osnovu logičkih zahteva vezanih za nefunkcionalne karakteristike. Imajući u vidu da kriterijumi mogu biti međusobno uslovljeni ili da njihov značaj može zavisiti od ostvarenih vrednosti drugih kriterijuma, a budući da klasična AHP metoda ne obezbeđuje podršku za takva vrsta problema, predloženo je uvođenje logičkih funkcija koje omogućavaju izražavanje odnosa između kriterijuma. Na ilustrativnim primerima je pokazano da primena konvencionalne fazi logike i konzistentne fazi logike ne moraju voditi istom izboru. Za izbor servisa za kompoziciju predlaže se nekoliko metoda. Za exact rešavanje MOFP problema predlaže se primena jedne postojeće metode koja je u ovom radu prilagođena uslovima problema. Kod većih problema kod kojih je vreme izvršavanja od kritičnog značaja, kao što je dinamički izbor servisa (izbor se obavlja neposredno pre izvršavanja ili čak za vervme izvršavanja), daje se prednost heurističkim metodama. U skladu sa tim, prvo se predlaže metoda promene susedstva (eng. Variable Neighborhood Search – VNS). Zatim je predstavljeno novo metaheurističko pretraživanje zasnovano na tabu pretraživanju i VNS metodi. Pokazano je da obe metode mogu biti upotrebljene za rešavanje MMKP (eng. Multi-dimensional Multiple-choice 0-1 Knapsack Problem) modela problem kao i problema modeliranih pristupom zasnovanom na konzistentnoj fazi logici. Takođe, predložena je i jedna nova metoda za pronalaženje početnog dopustivog rešenja MMKP problema. Valjanost predloženih pristupa vršena je eksperimentalno, što je podržano razvijenim softverskim rešenjem. Konačno, razmatra se i mogućnost šire upotrebe predloženih pristupa.'