Parallel knowledge tests are interchangeable examinations that consist of different question sets with roughly equivalent measurement properties. These tests are useful when multiple test-takers are involved, regardless of whether they take the test simultaneously or at different times. The test results must be comparable. The automation of the parallel test assembly process is essential to maintain objectivity by balancing the measurement properties of different test forms and minimizing examiner bias. Moreover, automation saves time for examiners, especially during large-scale testing. 

The automated parallel test assembly problem (APTA) is classified as an NP-hard combinatorial optimization problem, necessitating the use of heuristics. The APTA problem is isomorphic with other combinatorial optimization problems, allowing the application of heuristics used in those problems. The dissertation provides a comprehensive review of existing problem formulations, mathematical models, and heuristics used for different problem formulations. 

The dissertation also proposes a new efficient method of polynomial complexity to fully solve the APTA problem. This method adapts a constructive heuristic proposed by Nawaz, Enschore, and Ham to solve a formulation of the bin packing problem, which hasn't been used for the APTA problem before. The new method is characterized by its predictable execution time, efficiency, and ease of implementation. It is particularly useful in educational institutions that frequently test a relatively small number of students and have limited computer resources for ASPT. 

The proposed APTA method has been implemented and compared with efficient comparable methods based on improvement heuristics, such as simulated annealing (SA) and variable neighbourhood search (VNS). The proposed algorithm significantly reduces execution time compared to the SA algorithm, with only a slight decrease in quality. Compared to the VNS algorithm, the proposed algorithm has a much shorter average execution time and produces better results when interrupted at the same execution time. This is especially true for cases with relatively small numbers of parallel tests and item banks, which are common in educational testing.